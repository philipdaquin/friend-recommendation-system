# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI / CD Pipeline

on:
  push:
    branches: [ "master" ]
  workflow_dispatch: 

env:
  PROJECT_ID: ${{secrets.GKE_PROJECT}}
  GKE_CLUSTER: cluster-1
  GKE_ZONE: us-central1-c


jobs:
  Build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: maven
        server-id: docker.io
        server-username: MAVEN_USERNAME
        server-password: MAVEN_PASSWORD

    # - name: Building and Pushing User-service
    #   run: mvn package dockerfile:push --file user_service/pom.xml
    #   env:
    #       MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    #       MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Building and Pushing Friend Service
    #   run: mvn package dockerfile:push --file friend_service/pom.xml
    #   env:
    #       MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    #       MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    - name: Building and Pushing Recommendation Service
      run: mvn package dockerfile:push --file recommendation_service/pom.xml
      env:
          MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Building and Pushing Discovery Service
    #   run: mvn package dockerfile:push --file discovery_service/pom.xml
    #   env:
    #       MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    #       MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
          
    # - name: Building and Pushing Api Gateway 
    #   run: mvn package dockerfile:push --file api_gateway/pom.xml
    #   env:
    #       MAVEN_USERNAME: ${{ secrets.DOCKER_USERNAME }}
    #       MAVEN_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

    # # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
    # - name: Update dependency graph
    #   uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

  Deploy:
    needs: Build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: kubectl - Google Cloud GKE cluster.
      uses: ameydev/gke-kubectl-action@master
      env:
        PROJECT_ID: ${{ env.PROJECT_ID }}
        APPLICATION_CREDENTIALS: ${{ secrets.GKE_SA_KEY }}
        CLUSTER_NAME: ${{ env.GKE_CLUSTER }}
        ZONE_NAME: ${{ env.GKE_ZONE }}
      with:
        args: apply -f deployment/
