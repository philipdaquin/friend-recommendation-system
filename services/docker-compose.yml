version: '1.0'
services:













  # Neo4j
  neo4j:
    environment:
      NEO4J_AUTH: none
    image: neo4j:3.5.0
    ports:
      - "7474:7474/tcp"
      - "7687:7687/tcp"
    deploy:
      replicas: 1

  # Redis db
  redis:
    image: 'bitnami/redis:latest'
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
    networks:
      - app-tier

  # Mongo Db
  mongodb:
    image: "mongo:latest"
    container_name: mongo-container
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - ""

  # PostgreSQL
  postgres:
    image: postgres:14-alpine
    ports:
      - 5432:5432
    restart: always
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=username
      - POSTGRES_DB=citizix_db
    networks:
      - ""
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      interval: 1m30s
      timeout: 30s
      retries: 10

  # KAFKA: Dual Writes
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
  kafka_broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka_broker
    ports:
      - "9091:9091"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

volumes:
  mongodb_data_container:
  db-data:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

networks:
  bankAccount: