version: "1.0"

services:
  user-service:
    build: .
    container_name: user-service
    ports: 
      - "7000:7000"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=password
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-db:5432/users
    depends_on:
      postgres-db:
        condition: service_started
      redis-db:
        condition: service_started
    networks:
      - user-service-local

  # redis-db:
  #   container_name: redis
  #   image: 'bitnami/redis:latest'
  #   ports:
  #     - "6379:6379"
  #   networks:
  #     - user-service-local 
  #   environment:
  #     - REDIS_PASSWORD=password
  #     - ALLOW_EMPTY_PASSWORD=yes
  redis-db:
    image: redis:latest
    container_name: redis
    command: [ "redis-server", "--protected-mode", "no" ]
    ports:
    - "6379:6379"
    networks:
      - user-service-local

  postgres-db:
    restart: always
    image: postgres
    container_name: postgres-container-test
    ports:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=users
    networks:
      - user-service-local 
networks:
  user-service-local:
    external: false
volumes:
  db-data: