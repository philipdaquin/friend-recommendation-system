####
#   
#   local DOCKER TEST 
#
####
postgres.port: 5432
postgres.host: postgres-db
postgres.database-name: users 
postgres.username: postgres
postgres.url: jdbc:postgresql://${postgres.host:localhost}:${postgres.port}/
PRODUCER_TOPIC: user


redis.host:  redis-db
redis.port: 6379

spring:
  devtools:
    restart:
      enabled: true
    livereload:
      enabled: true
  config:
    activate:
      on-profile: docker 
  datasource:
    url: ${postgres.url}
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
  # liquibase:
  #   url: jdbc:${postgres.url}
  #   user: postgres
  #   password: password
  kafka:
    bootstrap-servers: kafka_broker:9191
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonDeserializer
  cache:
    type: redis
    redis:
      time-to-live: 60000
  data:
    redis:
      host: ${redis.host}
      port: ${redis.port}

eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka/


