####
#   
#   Production 
#
####
postgres.port: 5432
postgres.host: localhost
postgres.database-name: user 
postgres.url: postgresql://${postgres.host}:${postgres.port}/${postgres.database-name}
PRODUCER_TOPIC: user
postgres.username: username
postgres.password: password
# postgres.url: jdbc:postgresql://${postgres.host:localhost}:${postgres.port}/
# postgres.url: jdbc:postgresql://${postgres.host:localhost}:${postgres.port}/


redis.host:  redis-db
redis.port: 6379

spring:
  devtools:
    restart:
      enabled: false
    livereload:
      enabled: true
  config:
    activate:
      on-profile: prod 
  datasource:
    url: ${postgres.url}
    username: postgres
    password: password
    driver-class-name: org.postgresql.Driver
  r2dbc:
    url: r2dbc:${postgres.url}
    username: postgres
    password: password
  liquibase:
    url: ${postgres.url}
    user: postgres
    password: ${postgres.password}

  cache:
    type: redis
    redis:
      time-to-live: 60000
  data:
    redis:
      host: ${redis.host}
      port: ${redis.port}
  
  ##
  #  Apache Kafka Produder 
  ##
  kafka:
    template:
      default-topic: user
    bootstrap-servers: kafka_broker:9191
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonDeserializer
  # mvc:
  #   pathmatch:
  #     matching-strategy: ant-path-matcher
######
#  Service Registry 
#####
eureka:
  instance:
    prefer-ip-address: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka/
