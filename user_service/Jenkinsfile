pipeline { 
    agent any 

    environment { 
        dockerImageName = "philipasd/user_service"
    }
    stages { 

        stage('Checkout') { 
            steps { 
                checkout scm 
            }
        }

        stage('Compile Code') {
            steps {
                sh 'cd user_service && ./mvnw clean compile'
            }
        } 

        //
        //
        // stage('Static Code Analysis') {
        //     // environment {
        //     //     SONAR_URL = "http://34.201.116.83:9000"
        //     // }
        //     // steps {
        //     //     withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
        //     //         sh 'cd user_service && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        //     //     }
        //     // }
        // }
        
        
        stage('Unit Test') {
            steps {
                sh 'cd user_service && ./mvnw test'
            }
        } 
        
        
        stage('Integration Test') { 
            steps { 
                sh 'cd user_service && ./mvnw clean test -Pintegration-testing'
            }
        } 

        // stage('End to End Test') { 
        //     steps { 
        //         sh 'cd user_service && ./mvnw clean test -Pintegration-testing'
        //     }
        // } 
      
        // stage('Acceptance Test') { 
        //     steps { 
        //         sh 'cd user_service && ./mvnw clean test -Pintegration-testing'
        //     }
        // } 

        // stage("Performance tests") { 
        //     steps { 
        //         steps { 
        //             sh 'cd user_service && ./mvnw clean jmeter:jmeter'
        //         }
        //     }
        // }
        // stage('Package Artifact Jar') {
        //     steps { 
        //         sh 'cd user_service && ./mvnw package'
        //     }
        // } 

      
        // stage('Build Docker Image') {
        //     steps {
        //         def app = docker.build("${dockerImageName}", "-f user_service/Dockerfile user_service/")
        //     }
        // } 
        // stage('Push Image to DockerHub') {
        //     steps { 
        //         script { 
        //                 docker.withRegistry('https://registry.hub.docker.com', 'dockerhub') {
        //                     app.push("${env.BUILD_NUMBER}")
        //             }
        //         }
        //     }
        // } 

        // // 
        // // UNTESTED MANIFEST FILE LISTENER
        // // 
        // stage('Trigger Manifest Update') {
        //         echo "triggering updatemanifestjob"

        //         build job: 'updateFriendServiceManifest', parameters: [string(name: 'DOCKERTAG', value: env.BUILD_NUMBER)]
        // }
    }
    post { 
        success { 
            echo "Build Success"
            echo "Successfully built ${env.JOB_NAME} - ${env.BUILD_ID} on ${env.BUILD_URL}" 
        }
        failure { 
            echo "Build failed - ${env.JOB_NAME} - ${env.BUILD_ID} on ${env.BUILD_URL}"
        }
        aborted { 
            echo "${env.JOB_NAME} Build - ${env.BUILD_ID} Aborted!"
        }
    }
}