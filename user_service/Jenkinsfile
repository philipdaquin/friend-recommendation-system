pipeline { 
    agent any 
    environment { 
        APP_IMAGE = "philipasd/user_service"
        DOCKERHUB_CREDENTIALS = credentials('dockerhub')
        COMMIT_ID = "${env.BUILD_NUMBER}"

    }
    stages { 

        stage('Checkout') { 
            steps { 
                checkout scm 
            }
        }

        // stage('Compile Code') {
        //     steps {
        //         sh 'cd user_service && ./mvnw clean compile'
        //     }
        // } 
       
        // stage ('Static Analysis') {
        //     steps {
                
        //         // withCredentials([string(credentialsId: 'sonar', variable: 'sonartoken')]) {
        //         //     sh '''
        //         //         mvn clean compile -DskipTests=true sonar:sonar \
        //         //           -Dsonar.projectKey=java-devsecops \
        //         //           -Dsonar.host.url=http://sonarqube:9000 \
        //         //           -Dsonar.login=${sonartoken}
        //         //     '''
        //         // }
        //         echo "hello world"
        //     }
        // }
        
        // stage('Unit Test') {
        //     steps {
        //         sh 'cd user_service && ./mvnw test'
        //     }
        // } 
        
        
        // stage('Integration Test') { 
        //     steps { 
        //         // sh 'cd user_service && ./mvnw clean test -Pintegration-testing'
        //         // echo 'integration testing'
        //         sh 'cd user_service && ./mvnw test'
        //     }
        // } 

        // stage('End to End Test') { 
        //     steps { 
        //         // sh 'cd user_service && ./mvnw clean test -Pintegration-testing'
        //         // echo 'e2e tests'
        //          sh 'cd user_service && ./mvnw test'
        //     }
        // } 
      
        // stage('Acceptance Test') { 
        //     steps { 
        //         // sh 'cd user_service && ./mvnw clean test -Pintegration-testing'
        //         // echo 'acceptance tests'
        //          sh 'cd user_service && ./mvnw test'
        //     }
        // } 

        // stage("Performance tests") { 
        //     steps { 
        //         // sh 'cd user_service && ./mvnw clean jmeter:jmeter'
        //         // echo 'performance test'
        //         sh 'cd user_service && ./mvnw test'
        //     }
        // }

        stage('Package Artifact Jar') {
            steps { 
                sh 'cd user_service && ./mvnw package'
            }
        }   

        stage('Build Docker Image') {
            // environment {
            //     // COMMIT_ID = sh(returnStdout: true, script: 'git rev-parse HEAD').trim()
            //     // COMMIT_ID = sh(returnStdout: true, script: 'git rev-parse HEAD').trim()
            // }
            steps { 
                sh "docker build -t ${APP_IMAGE}:${COMMIT_ID} -f user_service/Dockerfile user_service/"
            }
        } 

        stage('Push Image to DockerHub') {
            // environment {
            //     COMMIT_ID = sh(returnStdout: true, script: 'git rev-parse HEAD').trim()
            // }
            steps{
                sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
                sh 'docker push ${APP_IMAGE}:${COMMIT_ID}'
            }
        } 



    }
    post { 
        success { 
            echo "Build Success"
            echo "Successfully built ${env.JOB_NAME} - ${env.BUILD_ID} on ${env.BUILD_URL}" 
        }
        failure { 
            echo "Build failed - ${env.JOB_NAME} - ${env.BUILD_ID} on ${env.BUILD_URL}"
        }
        aborted { 
            echo "${env.JOB_NAME} Build - ${env.BUILD_ID} Aborted!"
        }
    }
}