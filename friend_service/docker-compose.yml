version: "1.0"

services:
  friend-service: 
    build: .  
    container_name: friend-service
    ports:
      - "7001:7001"
    depends_on:
      mongo-db:
        condition: service_started
    networks:
      - friend-service-local
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - LOKI_URI=http://loki:3100/loki/api/v1/push
      - MANAGEMENT_ZIPKIN_TRACING_ENDPOINT=http://tempo:9411
  mongo-db:
    image: "mongo:latest"
    container_name: mongo-container
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME= username
      - MONGO_INITDB_ROOT_PASSWORD= password
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data_container:/data/db
    networks:
      - friend-service-local

  redis-db:
    image: redis:latest
    container_name: redis-db
    command: [ "redis-server", "--protected-mode", "no" ]
    ports:
    - "6379:6379"
    networks:
      - friend-service-local

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.82.0
    restart: always
    command:
      - --config=/etc/otelcol-contrib/otel-collector.yml
    volumes:
      - ../monitoring/collector/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension
    networks:
      - friend-service-local 


  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    depends_on:
      - loki
      - prometheus
      - tempo
    ports:
      - '3000:3000'
    volumes:
      - ../monitoring/grafana/grafana.ini:/etc/grafana/grafana.ini
      - ../monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ../monitoring/grafana/datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    networks:
      - friend-service-local 


  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: always
    ports:
      - '9090:9090'
    volumes:
      - ../monitoring/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      cadvisor:
        condition: service_started
    networks:
      - friend-service-local 


  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - '9093:9093'
    volumes:
      - ../monitoring/alertmanager/alertmanager.yml:/etc/alertmanager/alertmanager.yml
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
    networks:
      - friend-service-local 


  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: always
    ports:
      - '8080:8080'
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    depends_on:
      redis-db:
        condition: service_started
    networks:
      - friend-service-local 


  promtail:
    image: grafana/promtail:2.1.0
    container_name: promtail
    volumes:
      - ../monitoring/promtail/promtail.yml:/etc/promtail/promtail.yml
      # - ../logs/loki.log:/var/log/spring.log
    command: 
      - "--config.file=/etc/promtail/promtail.yml"
    ports:
      - "9080:9080"
    depends_on:
      - loki
    networks:
      - friend-service-local 


  loki:
    image: grafana/loki:2.7.3
    container_name: loki
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    networks:
      - friend-service-local 


  tempo:
    image: grafana/tempo:2.0.0
    container_name: tempo
    command: -config.file /etc/tempo-config.yml
    ports:
      - "3200:3200"     # Tempo
      # - "4317"          # OTLP
      - "9411:9411"     # Zipkin
    volumes:
      - ../monitoring/tempo/tempo.yml:/etc/tempo-config.yml
    networks:
      - friend-service-local 





networks:
  friend-service-local:
    external: false

volumes:
  mongodb_data_container:
