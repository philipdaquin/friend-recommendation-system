
redis.host:  redis-db
redis.port: 6379




server:
  port: 8090
spring:
  config:
    activate:
      on-profile: docker
  cache:
    type: redis
    redis:
      time-to-live: 60000
  data:
    redis:
      host: ${redis.host}
      port: ${redis.port}
  cloud:
    discovery:
      client:
        health-indicator:
          enabled: true
    
    gateway:
      default-filters:
      - SaveSession
      - TokenRelay
      - name: RequestRateLimiter
        args:
          redis-rate-limiter:
            replenishRate: 10
            burstCapacity: 20
            requestedTokens: 1
      httpclient:
        ssl:
          use-insecure-trust-manager: true
      discovery:
        locator:
          enabled: true
      
      routes:
      # Id - Every route requires a unique identifer 
      - id: user-service
        uri: lb://user-service
        predicates:
        - Path= /users/**
        filters: 
        - name: RewritePath
          args: 
            regexp: "/users/(?<remaining>.*)"
            replacement: "/api/v1/users/${remaining}"
        - name: CircuitBreaker 
          args:
            name: user-service
            fallbackuri: forward:/user-service-fallback
        - name: Retry
          args:
            retries: 3
            method: GET
            backoff:
              firstBackoff: 50ms
              maxBackoff: 500ms

      - id: friend-service
        uri: lb://friend-service
        predicates:
        - Path= /friend/**
        filters: 
        - name: RewritePath
          args: 
            regexp: "/friend/(?<remaining>.*)"
            replacement: "/${remaining}"
        - name: CircuitBreaker 
          args:
            name: user-service
            fallbackuri: forward:/friend-service-fallback
        - name: Retry
          args:
            retries: 3
            method: GET
            backoff:
              firstBackoff: 50ms
              maxBackoff: 500ms

      - id: recommendation-service
        uri: lb://recommendation-service
        predicates:
        - Path= /recommendation/**
        filters: 
        - name: RewritePath
          args: 
            regexp: "/recommendation/(?<remaining>.*)"
            replacement: "/${remaining}"
        - name: CircuitBreaker 
          args:
            name: user-service
            fallbackuri: forward:/recommendation-service-fallback
        - name: Retry
          args:
            retries: 3
            method: GET
            backoff:
              firstBackoff: 50ms
              maxBackoff: 500ms
eureka:
  instance:
    hostname: localhost
    prefer-ip-address: true
  client:
    enabled: true
    register-with-eureka: true
    fetch-registry: true
    healthcheck:
      enabled: true
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka/
      
logging:
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
  level:
    root: INFO
    com.example: DEBUG
    org.springframework.cloud.gateway: DEBUG
    org.springframework.security: TRACE
    

