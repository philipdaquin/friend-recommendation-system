apiVersion: apps/v1 ## Kubernetes API Version
kind: Deployment ## Type of resource
metadata:
  labels:
    app: neo4j-db ## Labels given by user
  name: neo4j-db ## Name given to the <kind> resource
  namespace: test ## Namespace in which to deploy the resource
spec:
  replicas: 1
  selector:
    matchLabels: ## Should be same as spec.template.labels
      app: neo4j-db
  template:
    metadata:
      labels: ## Should be same as spec.selector.matchLabels
        app: neo4j-db 
    spec:
      initContainers:
        - name: init-plugins
          image: "appropriate/curl:latest"
          imagePullPolicy: "IfNotPresent"
          volumeMounts:
          - name: neo4j-plugins
            mountPath: /plugins
          command:
            - "/bin/sh"
            - "-c"
            - |
              curl -L https://github.com/neo4j-contrib/neo4j-apoc-procedures/releases/download/3.5.0.6/apoc-3.5.0.6-all.jar -O
              curl -L https://github.com/neo4j-contrib/neo4j-graph-algorithms/releases/download/3.5.4.0/graph-algorithms-algo-3.5.4.0.jar -O
              cp -R apoc-3.5.0.6-all.jar /plugins
              cp -R graph-algorithms-algo-3.5.4.0.jar /plugins
      containers:
      - image: neo4j:latest ## Image Name
        name: neo4j ## Name of container
        env: ## Env variables to pass
          - name: NEO4J_dbms_security_procedures_unrestricted
            value: "algo.*"
          - name: NEO4J_dbms_directories_plugins
            value: "plugins"
        ports: ## Ports to map
            - containerPort: 7474
              name: http
            - containerPort: 7687
              name: bolt
            - containerPort: 7473
              name: https
        volumeMounts: ## Volumes to mount
            - name: neo4j-plugins
              mountPath: "/var/lib/neo4j/plugins"
            - name: neo4j-data
              mountPath: "/var/lib/neo4j/data"
      volumes:
          - name: neo4j-data
            persistentVolumeClaim:
              claimName: neo4j-data-claim
          - name: neo4j-plugins
            persistentVolumeClaim:
              claimName: neo4j-plugin-claim